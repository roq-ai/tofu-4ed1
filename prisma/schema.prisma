generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model booking {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  guest_id   String?  @db.Uuid
  hotel_id   String?  @db.Uuid
  start_date DateTime @db.Timestamp(6)
  end_date   DateTime @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  guest      guest?   @relation(fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  hotel      hotel?   @relation(fields: [hotel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model guest {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  booking     booking[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hotel {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(255)
  description String?      @db.VarChar(255)
  image       String?      @db.VarChar(255)
  owner_id    String?      @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  booking     booking[]
  hotel_owner hotel_owner? @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hotel_owner {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  hotel      hotel[]
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  guest       guest[]
  hotel_owner hotel_owner[]
}
